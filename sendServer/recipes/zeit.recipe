__license__   = 'GPL v3'
__copyright__ = '2008, Kovid Goyal <kovid at kovidgoyal.net>'

'''
Fetch Die Zeit.
'''

from calibre.web.feeds.news import BasicNewsRecipe

class ZeitDe(BasicNewsRecipe):

    title = 'Die Zeit'
    description = 'Zeit Online'
    language = 'de'
    #timefmt = ''
    encoding = 'utf-8'
    masthead_url =  'http://upload.wikimedia.org/wikipedia/de/archive/0/09/20070131223355!Die_Zeit-Logo.svg'


    __author__ = 'Martin Pitt, Sujata Raman, Ingo Paschke, Marc Toensing and Mario Konschake'
    no_stylesheets    = True
    remove_javascript = True

    max_articles_per_feed = 40
    oldest_article        = 1.1
    timeout               = 60

    remove_tags = [
                        dict(name=['iframe','img']),
                        dict(name='div', attrs={'class':["response","pagination block","pagenav","inline link", "copyright","articlefooter af", "inline portrait"] }),
                        dict(name='p', attrs={'class':["ressortbacklink", "copyright", "caption"] }),
                        dict(name='div', attrs={'id':["place_5","place_4","comments", "relatedArticles"]})
                      ]

    keep_only_tags = [
                      dict(id=['main']),
                      dict(name='div', attrs={' class':['tools'] })
                    ]

    feeds =  [
               ('Top-Themen', 'http://newsfeed.zeit.de/index_xml'),
               ('Politik', 'http://newsfeed.zeit.de/politik/index'),
               ('Gesellschaft', 'http://newsfeed.zeit.de/gesellschaft/index'),
               ('Kultur', 'http://newsfeed.zeit.de/kultur/index'),
               ('Wirtschaft', 'http://newsfeed.zeit.de/wirtschaft/index'),
               ('Meinung', 'http://newsfeed.zeit.de/meinung/index'),
               ('Wissen', 'http://newsfeed.zeit.de/wissen/index'),
               ('Digital', 'http://newsfeed.zeit.de/digital/index'),
               ('Studium', 'http://newsfeed.zeit.de/studium/index'),
               ('Karriere', 'http://newsfeed.zeit.de/karriere/index'),
               ('Sport', 'http://newsfeed.zeit.de/sport/index'),
               ('Lebensart', 'http://newsfeed.zeit.de/lebensart/index'),
               #('Reisen', 'http://newsfeed.zeit.de/reisen/index'),
               #('Auto', 'http://newsfeed.zeit.de/auto/index'),
             ]

    extra_css = '.excerpt{font-style: italic}.reaktion,.taglist,.comments,.reponse,.responsetitle,.responsebody,.reponse,.inline,.date{display:none;}li.date{display:block}'

    def get_article_url(self, article):
        ans = article.get('link',None)
        ans += "/komplettansicht"

        if 'video' in ans or 'quiz' in ans or 'blog' in ans :
              ans = None
        return ans

    def preprocess_html(self, soup):
        
        for tag in soup.findAll(name=['ul','li']):
            tag.name = 'div'
            
        for tag in soup.findAll(name=['span']):
            if tag['class'] == 'supertitle':
              tag.name = 'h4'
            if tag['class'] == 'title':
              tag.name = 'h2'
              
        

        soup.html['xml:lang'] = self.language.replace('_', '-')
        soup.html['lang']     = self.language.replace('_', '-')
        mtag = '<meta http-equiv="Content-Type" content="text/html; charset=' + self.encoding + '">'
        soup.head.insert(0,mtag)
        return soup

    def get_cover_url(self):
        return 'http://upload.wikimedia.org/wikipedia/commons/5/59/Empty.png'
