# -*- coding: utf-8 -*-
__license__   = 'GPL v3'
__copyright__ = '2008, Kovid Goyal kovid@kovidgoyal.net'

from calibre.web.feeds.news import BasicNewsRecipe

class TazRSSRecipe(BasicNewsRecipe):
    title = 'die tageszeitung'
    __author__ = 'Alexander Schremmer, Mario Konschake'
    language = 'de'
    lang = 'de-DE'
    oldest_article = 1.1
    max_articles_per_feed = 20
    use_embedded_content  = False
    no_stylesheets        = True
    encoding              = 'utf-8'
    remove_javascript     = True
    remove_empty_feeds    = True
    timefmt               = ''
    publisher = 'taz Entwicklungs GmbH & Co. Medien KG'

    conversion_options = {'publisher': publisher,
                          'language': lang,
                        }

    feeds          = [
      ('Top-Themen', 'http://www.taz.de/!p3270;rss/'),
      ('Politik', 'http://www.taz.de/Politik/!p2;rss/'),
      ('Zukunft', 'http://www.taz.de/Zukunft/!p4;rss/'),
      ('Netz', 'http://www.taz.de/Netz/!p5;rss/'),
      ('Debatte', 'http://www.taz.de/Debatte/!p9;rss/'),
      ('Leben', 'http://www.taz.de/Leben/!p10;rss/'),
      ('Berlin', 'http://www.taz.de/Berlin/!p14;rss/'),
      ('Sport', 'http://www.taz.de/Sport/!p12;rss/'),
      ('Ãœberwachung', 'http://www.taz.de/Schwerpunkt-berwachung/!t10;rss/')
    ]
    
    keep_only_tags = [dict(name='div', attrs={'class': 'sect sect_article'})]
    
    remove_tags_after = dict(name='div', attrs={'class': 'rack'})
    
    remove_tags = [
         dict(name=['div'], attrs={'class': ['artikelwerbung', 'caption', 'credit', 'rack','secthead']}),
         dict(name=['span'], attrs={'class': ['credit']}),
         dict(name=['p'], attrs={'class': ['caption']}),
         dict(name=['ul'], attrs={'class': 'toolbar'}),
         dict(name='img')
         ]
         
    extra_css = '.intro{font-style: italic}'
         
    def get_cover_url(self):
        return 'http://upload.wikimedia.org/wikipedia/commons/5/59/Empty.png'
        
    def preprocess_html(self, soup):
        for tag in soup.findAll(name=['h6']):
            tag.name = 'h3'

        soup.html['xml:lang'] = self.language.replace('_', '-')
        soup.html['lang']     = self.language.replace('_', '-')
        mtag = '<meta http-equiv="Content-Type" content="text/html; charset=' + self.encoding + '">'
        soup.head.insert(0,mtag)
        return soup
